// Generated by CoffeeScript 1.6.3
(function() {
  module.exports = function(grunt) {
    grunt.initConfig({
      copy: {
        venders: {
          files: [
            {
              cwd: "src/venders",
              expand: true,
              src: ["**"],
              dest: "dev/venders"
            }, {
              cwd: "src/images",
              expand: true,
              src: ["**"],
              dest: "dev/images"
            }
          ]
        }
      },
      sync: {
        main: {
          files: [
            {
              cwd: "src",
              src: "**/*.html",
              dest: "dev/"
            }, {
              cwd: "venders",
              src: "**/*.*",
              dest: "dev/"
            }
          ]
        }
      },

      watch: {
        js: {
          files: ["src/js/*.js", "src/js/**/*.js"],
          tasks: ["concat:js"]
        },
        css: {
          files: ["src/css/*.css"],
          tasks: ["concat:css"]
        },
        html: {
          files: ["src/views/**/*.html"],
          tasks: ["sync"]
        },
        index: {
          files: ["src/index.html"],
          tasks: ["sync"]
        },
        options: {
          livereload: {
            port: 8888
          }
        }
      },
      concat: {
        js: {
          src: ["src/js/app.js", "src/js/services/**/*.js", "src/js/controllers/**/*.js", "src/js/directives/**/*.js"],
          dest: "dev/js/final.js"
        },
        css: {
          src: ["src/css/*.css"],
          dest: "dev/css/style.css"
        }
      },
      nodemon: {
        dev: {
          script: "server.js"
        }
      },
      concurrent: {
        dev: [ "watch", "nodemon"]
      }
    });

    // Load grunt tasks....
    grunt.loadNpmTasks("grunt-contrib-concat");
    grunt.loadNpmTasks("grunt-contrib-watch");
    grunt.loadNpmTasks("grunt-contrib-copy");
    grunt.loadNpmTasks("grunt-sync");
    grunt.loadNpmTasks("grunt-nodemon");
    grunt.loadNpmTasks("grunt-concurrent");
    return grunt.registerTask("default", ["copy", "concurrent"] );

  };

}).call(this);
